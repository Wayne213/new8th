{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import cv2     # for capturing videos\n",
    "import math   # for mathematical operations\n",
    "import matplotlib.pyplot as plt    # for plotting the images\n",
    "%matplotlib inline\n",
    "import pandas as pd\n",
    "from keras.preprocessing import image   # for preprocessing the images\n",
    "import numpy as np    # for mathematical operations\n",
    "from keras.utils import np_utils\n",
    "from skimage.transform import resize   # for resizing images"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Captured...frame0.jpg\n",
      "Captured...frame1.jpg\n",
      "Captured...frame2.jpg\n",
      "Captured...frame3.jpg\n",
      "Captured...frame4.jpg\n",
      "Captured...frame5.jpg\n",
      "Captured...frame6.jpg\n",
      "Captured...frame7.jpg\n",
      "Captured...frame8.jpg\n",
      "Captured...frame9.jpg\n",
      "Captured...frame10.jpg\n",
      "Captured...frame11.jpg\n",
      "Captured...frame12.jpg\n",
      "Captured...frame13.jpg\n",
      "Captured...frame14.jpg\n",
      "Captured...frame15.jpg\n",
      "Captured...frame16.jpg\n",
      "Captured...frame17.jpg\n",
      "Captured...frame18.jpg\n",
      "Captured...frame19.jpg\n",
      "Captured...frame20.jpg\n",
      "Captured...frame21.jpg\n",
      "Captured...frame22.jpg\n",
      "Captured...frame23.jpg\n",
      "Captured...frame24.jpg\n",
      "Captured...frame25.jpg\n",
      "Captured...frame26.jpg\n",
      "Captured...frame27.jpg\n",
      "Captured...frame28.jpg\n",
      "Captured...frame29.jpg\n",
      "Captured...frame30.jpg\n",
      "Captured...frame31.jpg\n",
      "Captured...frame32.jpg\n",
      "Captured...frame33.jpg\n",
      "Captured...frame34.jpg\n",
      "Captured...frame35.jpg\n",
      "Captured...frame36.jpg\n",
      "Captured...frame37.jpg\n",
      "Captured...frame38.jpg\n",
      "Captured...frame39.jpg\n",
      "Captured...frame40.jpg\n",
      "Captured...frame41.jpg\n",
      "Captured...frame42.jpg\n",
      "Captured...frame43.jpg\n",
      "Captured...frame44.jpg\n",
      "Captured...frame45.jpg\n",
      "Captured...frame46.jpg\n",
      "Captured...frame47.jpg\n",
      "Captured...frame48.jpg\n",
      "Captured...frame49.jpg\n",
      "Captured...frame50.jpg\n",
      "Captured...frame51.jpg\n",
      "Captured...frame52.jpg\n",
      "Captured...frame53.jpg\n",
      "Captured...frame54.jpg\n",
      "Captured...frame55.jpg\n",
      "Captured...frame56.jpg\n",
      "Captured...frame57.jpg\n",
      "Captured...frame58.jpg\n",
      "Captured...frame59.jpg\n",
      "Captured...frame60.jpg\n",
      "Captured...frame61.jpg\n",
      "Captured...frame62.jpg\n",
      "Captured...frame63.jpg\n",
      "Captured...frame64.jpg\n",
      "Captured...frame65.jpg\n",
      "Captured...frame66.jpg\n",
      "Captured...frame67.jpg\n",
      "Captured...frame68.jpg\n",
      "Captured...frame69.jpg\n",
      "Captured...frame70.jpg\n",
      "Captured...frame71.jpg\n",
      "Captured...frame72.jpg\n",
      "Captured...frame73.jpg\n",
      "Captured...frame74.jpg\n",
      "Captured...frame75.jpg\n",
      "Captured...frame76.jpg\n",
      "Captured...frame77.jpg\n",
      "Captured...frame78.jpg\n",
      "Captured...frame79.jpg\n",
      "Captured...frame80.jpg\n",
      "Captured...frame81.jpg\n",
      "Captured...frame82.jpg\n",
      "Captured...frame83.jpg\n",
      "Captured...frame84.jpg\n",
      "Captured...frame85.jpg\n",
      "Captured...frame86.jpg\n",
      "Captured...frame87.jpg\n",
      "Captured...frame88.jpg\n",
      "Captured...frame89.jpg\n",
      "Captured...frame90.jpg\n",
      "Captured...frame91.jpg\n",
      "Captured...frame92.jpg\n",
      "Captured...frame93.jpg\n",
      "Captured...frame94.jpg\n",
      "Captured...frame95.jpg\n",
      "Captured...frame96.jpg\n",
      "Captured...frame97.jpg\n",
      "Captured...frame98.jpg\n",
      "Captured...frame99.jpg\n",
      "Captured...frame100.jpg\n",
      "Captured...frame101.jpg\n",
      "Captured...frame102.jpg\n",
      "Captured...frame103.jpg\n",
      "Captured...frame104.jpg\n",
      "Captured...frame105.jpg\n",
      "Captured...frame106.jpg\n",
      "Captured...frame107.jpg\n",
      "Captured...frame108.jpg\n",
      "Captured...frame109.jpg\n",
      "Captured...frame110.jpg\n",
      "Captured...frame111.jpg\n",
      "Captured...frame112.jpg\n",
      "Captured...frame113.jpg\n",
      "Captured...frame114.jpg\n",
      "Captured...frame115.jpg\n",
      "Captured...frame116.jpg\n",
      "Captured...frame117.jpg\n",
      "Captured...frame118.jpg\n",
      "Captured...frame119.jpg\n",
      "Captured...frame120.jpg\n",
      "Captured...frame121.jpg\n",
      "Captured...frame122.jpg\n",
      "Captured...frame123.jpg\n",
      "Captured...frame124.jpg\n",
      "Captured...frame125.jpg\n",
      "Captured...frame126.jpg\n",
      "Captured...frame127.jpg\n",
      "Captured...frame128.jpg\n",
      "Captured...frame129.jpg\n",
      "Captured...frame130.jpg\n",
      "Captured...frame131.jpg\n",
      "Captured...frame132.jpg\n",
      "Captured...frame133.jpg\n",
      "Captured...frame134.jpg\n",
      "Captured...frame135.jpg\n",
      "Captured...frame136.jpg\n",
      "Captured...frame137.jpg\n",
      "Captured...frame138.jpg\n",
      "Captured...frame139.jpg\n",
      "Captured...frame140.jpg\n",
      "Captured...frame141.jpg\n",
      "Captured...frame142.jpg\n",
      "Captured...frame143.jpg\n",
      "Captured...frame144.jpg\n",
      "Captured...frame145.jpg\n",
      "Captured...frame146.jpg\n",
      "Captured...frame147.jpg\n",
      "Captured...frame148.jpg\n",
      "Captured...frame149.jpg\n",
      "Captured...frame150.jpg\n",
      "Captured...frame151.jpg\n",
      "Captured...frame152.jpg\n",
      "Captured...frame153.jpg\n",
      "Captured...frame154.jpg\n",
      "Captured...frame155.jpg\n",
      "Captured...frame156.jpg\n",
      "Captured...frame157.jpg\n",
      "Captured...frame158.jpg\n",
      "Captured...frame159.jpg\n",
      "Captured...frame160.jpg\n",
      "Captured...frame161.jpg\n",
      "Captured...frame162.jpg\n",
      "Captured...frame163.jpg\n",
      "Captured...frame164.jpg\n",
      "Captured...frame165.jpg\n",
      "Captured...frame166.jpg\n",
      "Captured...frame167.jpg\n",
      "Captured...frame168.jpg\n",
      "Captured...frame169.jpg\n",
      "Captured...frame170.jpg\n",
      "Captured...frame171.jpg\n",
      "Captured...frame172.jpg\n",
      "Captured...frame173.jpg\n",
      "Captured...frame174.jpg\n",
      "Captured...frame175.jpg\n",
      "Captured...frame176.jpg\n",
      "Captured...frame177.jpg\n",
      "Captured...frame178.jpg\n",
      "Captured...frame179.jpg\n",
      "Captured...frame180.jpg\n",
      "Captured...frame181.jpg\n",
      "Captured...frame182.jpg\n",
      "Captured...frame183.jpg\n",
      "Captured...frame184.jpg\n",
      "Captured...frame185.jpg\n",
      "Captured...frame186.jpg\n",
      "Captured...frame187.jpg\n",
      "Captured...frame188.jpg\n",
      "Captured...frame189.jpg\n",
      "Captured...frame190.jpg\n",
      "Captured...frame191.jpg\n",
      "Captured...frame192.jpg\n",
      "Captured...frame193.jpg\n",
      "Captured...frame194.jpg\n",
      "Captured...frame195.jpg\n",
      "Captured...frame196.jpg\n",
      "Captured...frame197.jpg\n",
      "Captured...frame198.jpg\n",
      "Captured...frame199.jpg\n",
      "Captured...frame200.jpg\n",
      "Captured...frame201.jpg\n",
      "Captured...frame202.jpg\n",
      "Captured...frame203.jpg\n",
      "Captured...frame204.jpg\n",
      "Captured...frame205.jpg\n",
      "Captured...frame206.jpg\n",
      "Captured...frame207.jpg\n",
      "Captured...frame208.jpg\n",
      "Captured...frame209.jpg\n",
      "Captured...frame210.jpg\n",
      "Captured...frame211.jpg\n",
      "Captured...frame212.jpg\n",
      "Captured...frame213.jpg\n",
      "Captured...frame214.jpg\n",
      "Captured...frame215.jpg\n",
      "Captured...frame216.jpg\n",
      "Captured...frame217.jpg\n",
      "Captured...frame218.jpg\n",
      "Captured...frame219.jpg\n",
      "Captured...frame220.jpg\n",
      "Captured...frame221.jpg\n",
      "Captured...frame222.jpg\n",
      "Captured...frame223.jpg\n",
      "Captured...frame224.jpg\n",
      "Captured...frame225.jpg\n",
      "Captured...frame226.jpg\n",
      "Captured...frame227.jpg\n",
      "Captured...frame228.jpg\n",
      "Captured...frame229.jpg\n",
      "Captured...frame230.jpg\n",
      "Captured...frame231.jpg\n",
      "Captured...frame232.jpg\n",
      "Captured...frame233.jpg\n",
      "Captured...frame234.jpg\n",
      "Captured...frame235.jpg\n",
      "Captured...frame236.jpg\n",
      "Captured...frame237.jpg\n",
      "Captured...frame238.jpg\n",
      "Captured...frame239.jpg\n",
      "Captured...frame240.jpg\n",
      "Captured...frame241.jpg\n",
      "Captured...frame242.jpg\n",
      "Captured...frame243.jpg\n",
      "Captured...frame244.jpg\n",
      "Captured...frame245.jpg\n",
      "Captured...frame246.jpg\n",
      "Captured...frame247.jpg\n",
      "Captured...frame248.jpg\n",
      "Captured...frame249.jpg\n",
      "Captured...frame250.jpg\n",
      "Captured...frame251.jpg\n",
      "Captured...frame252.jpg\n",
      "Captured...frame253.jpg\n",
      "Captured...frame254.jpg\n",
      "Captured...frame255.jpg\n",
      "Captured...frame256.jpg\n",
      "Captured...frame257.jpg\n",
      "Captured...frame258.jpg\n",
      "Captured...frame259.jpg\n",
      "Captured...frame260.jpg\n",
      "Captured...frame261.jpg\n",
      "Captured...frame262.jpg\n",
      "Captured...frame263.jpg\n",
      "Captured...frame264.jpg\n",
      "Captured...frame265.jpg\n",
      "Captured...frame266.jpg\n",
      "Captured...frame267.jpg\n",
      "Captured...frame268.jpg\n",
      "Captured...frame269.jpg\n",
      "Captured...frame270.jpg\n",
      "Captured...frame271.jpg\n",
      "Captured...frame272.jpg\n",
      "Captured...frame273.jpg\n",
      "Captured...frame274.jpg\n",
      "Captured...frame275.jpg\n",
      "Captured...frame276.jpg\n",
      "Captured...frame277.jpg\n",
      "Captured...frame278.jpg\n",
      "Captured...frame279.jpg\n",
      "Captured...frame280.jpg\n",
      "Captured...frame281.jpg\n",
      "Captured...frame282.jpg\n",
      "Captured...frame283.jpg\n",
      "Captured...frame284.jpg\n",
      "Captured...frame285.jpg\n",
      "Captured...frame286.jpg\n",
      "Captured...frame287.jpg\n",
      "Captured...frame288.jpg\n",
      "Captured...frame289.jpg\n",
      "Captured...frame290.jpg\n",
      "Captured...frame291.jpg\n",
      "Captured...frame292.jpg\n",
      "Captured...frame293.jpg\n",
      "Captured...frame294.jpg\n",
      "Captured...frame295.jpg\n",
      "Captured...frame296.jpg\n",
      "Captured...frame297.jpg\n",
      "Captured...frame298.jpg\n",
      "Captured...frame299.jpg\n",
      "Captured...frame300.jpg\n",
      "Captured...frame301.jpg\n",
      "Captured...frame302.jpg\n",
      "Captured...frame303.jpg\n",
      "Captured...frame304.jpg\n",
      "Captured...frame305.jpg\n",
      "Captured...frame306.jpg\n",
      "Captured...frame307.jpg\n",
      "Captured...frame308.jpg\n",
      "Captured...frame309.jpg\n",
      "Captured...frame310.jpg\n",
      "Captured...frame311.jpg\n",
      "Captured...frame312.jpg\n",
      "Captured...frame313.jpg\n",
      "Captured...frame314.jpg\n",
      "Captured...frame315.jpg\n",
      "Captured...frame316.jpg\n",
      "Captured...frame317.jpg\n",
      "Captured...frame318.jpg\n",
      "Captured...frame319.jpg\n",
      "Captured...frame320.jpg\n",
      "Captured...frame321.jpg\n",
      "Captured...frame322.jpg\n",
      "Captured...frame323.jpg\n",
      "Captured...frame324.jpg\n",
      "Captured...frame325.jpg\n",
      "Captured...frame326.jpg\n",
      "Captured...frame327.jpg\n",
      "Captured...frame328.jpg\n",
      "Captured...frame329.jpg\n",
      "Captured...frame330.jpg\n",
      "Captured...frame331.jpg\n",
      "Captured...frame332.jpg\n",
      "Captured...frame333.jpg\n",
      "Captured...frame334.jpg\n",
      "Captured...frame335.jpg\n",
      "Captured...frame336.jpg\n",
      "Captured...frame337.jpg\n",
      "Captured...frame338.jpg\n",
      "Captured...frame339.jpg\n",
      "Captured...frame340.jpg\n",
      "Captured...frame341.jpg\n",
      "Captured...frame342.jpg\n",
      "Captured...frame343.jpg\n",
      "Captured...frame344.jpg\n",
      "Captured...frame345.jpg\n",
      "Captured...frame346.jpg\n",
      "Captured...frame347.jpg\n",
      "Captured...frame348.jpg\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Captured...frame349.jpg\n",
      "Captured...frame350.jpg\n",
      "Captured...frame351.jpg\n",
      "Captured...frame352.jpg\n",
      "Captured...frame353.jpg\n",
      "Captured...frame354.jpg\n",
      "Captured...frame355.jpg\n",
      "Captured...frame356.jpg\n",
      "Captured...frame357.jpg\n",
      "Captured...frame358.jpg\n",
      "Captured...frame359.jpg\n",
      "Captured...frame360.jpg\n",
      "Captured...frame361.jpg\n",
      "Captured...frame362.jpg\n",
      "Captured...frame363.jpg\n",
      "Captured...frame364.jpg\n",
      "Captured...frame365.jpg\n",
      "Captured...frame366.jpg\n",
      "Captured...frame367.jpg\n",
      "Captured...frame368.jpg\n",
      "Captured...frame369.jpg\n",
      "Captured...frame370.jpg\n",
      "Captured...frame371.jpg\n",
      "Captured...frame372.jpg\n",
      "Captured...frame373.jpg\n",
      "Captured...frame374.jpg\n",
      "Captured...frame375.jpg\n",
      "Captured...frame376.jpg\n",
      "Captured...frame377.jpg\n",
      "Captured...frame378.jpg\n",
      "Captured...frame379.jpg\n",
      "Captured...frame380.jpg\n",
      "Captured...frame381.jpg\n",
      "Captured...frame382.jpg\n",
      "Captured...frame383.jpg\n",
      "Captured...frame384.jpg\n",
      "Captured...frame385.jpg\n",
      "Captured...frame386.jpg\n",
      "Captured...frame387.jpg\n",
      "Captured...frame388.jpg\n",
      "Captured...frame389.jpg\n",
      "Captured...frame390.jpg\n",
      "Captured...frame391.jpg\n",
      "Captured...frame392.jpg\n",
      "Captured...frame393.jpg\n",
      "Captured...frame394.jpg\n",
      "Captured...frame395.jpg\n",
      "Captured...frame396.jpg\n",
      "Captured...frame397.jpg\n",
      "Captured...frame398.jpg\n",
      "Captured...frame399.jpg\n",
      "Captured...frame400.jpg\n",
      "Captured...frame401.jpg\n",
      "Captured...frame402.jpg\n",
      "Captured...frame403.jpg\n",
      "Captured...frame404.jpg\n",
      "Captured...frame405.jpg\n",
      "Captured...frame406.jpg\n",
      "Captured...frame407.jpg\n",
      "Captured...frame408.jpg\n",
      "Captured...frame409.jpg\n",
      "Captured...frame410.jpg\n",
      "Captured...frame411.jpg\n",
      "Captured...frame412.jpg\n",
      "Captured...frame413.jpg\n",
      "Captured...frame414.jpg\n",
      "Captured...frame415.jpg\n",
      "Captured...frame416.jpg\n",
      "Captured...frame417.jpg\n",
      "Captured...frame418.jpg\n",
      "Captured...frame419.jpg\n",
      "Captured...frame420.jpg\n",
      "Captured...frame421.jpg\n",
      "Captured...frame422.jpg\n",
      "Captured...frame423.jpg\n",
      "Captured...frame424.jpg\n",
      "Captured...frame425.jpg\n",
      "Captured...frame426.jpg\n",
      "Captured...frame427.jpg\n",
      "Captured...frame428.jpg\n",
      "Captured...frame429.jpg\n",
      "Captured...frame430.jpg\n",
      "Captured...frame431.jpg\n",
      "Captured...frame432.jpg\n",
      "Captured...frame433.jpg\n",
      "Captured...frame434.jpg\n",
      "Captured...frame435.jpg\n",
      "Captured...frame436.jpg\n",
      "Captured...frame437.jpg\n",
      "Captured...frame438.jpg\n",
      "Captured...frame439.jpg\n",
      "Captured...frame440.jpg\n",
      "Captured...frame441.jpg\n",
      "Captured...frame442.jpg\n",
      "Captured...frame443.jpg\n",
      "Captured...frame444.jpg\n",
      "Captured...frame445.jpg\n",
      "Captured...frame446.jpg\n",
      "Captured...frame447.jpg\n",
      "Captured...frame448.jpg\n",
      "Captured...frame449.jpg\n",
      "Captured...frame450.jpg\n",
      "Captured...frame451.jpg\n",
      "Captured...frame452.jpg\n",
      "Captured...frame453.jpg\n",
      "Captured...frame454.jpg\n",
      "Captured...frame455.jpg\n",
      "Captured...frame456.jpg\n",
      "Captured...frame457.jpg\n",
      "Captured...frame458.jpg\n",
      "Captured...frame459.jpg\n",
      "Captured...frame460.jpg\n",
      "Captured...frame461.jpg\n",
      "Captured...frame462.jpg\n",
      "Captured...frame463.jpg\n",
      "Captured...frame464.jpg\n",
      "Captured...frame465.jpg\n",
      "Captured...frame466.jpg\n",
      "Captured...frame467.jpg\n",
      "Captured...frame468.jpg\n",
      "Captured...frame469.jpg\n",
      "Captured...frame470.jpg\n",
      "Captured...frame471.jpg\n",
      "Captured...frame472.jpg\n",
      "Captured...frame473.jpg\n",
      "Captured...frame474.jpg\n",
      "Captured...frame475.jpg\n",
      "Captured...frame476.jpg\n",
      "Captured...frame477.jpg\n",
      "Captured...frame478.jpg\n",
      "Captured...frame479.jpg\n",
      "Captured...frame480.jpg\n",
      "Captured...frame481.jpg\n",
      "Captured...frame482.jpg\n",
      "Captured...frame483.jpg\n",
      "Captured...frame484.jpg\n",
      "Captured...frame485.jpg\n",
      "Captured...frame486.jpg\n",
      "Captured...frame487.jpg\n",
      "Captured...frame488.jpg\n",
      "Captured...frame489.jpg\n",
      "Captured...frame490.jpg\n",
      "Captured...frame491.jpg\n",
      "Captured...frame492.jpg\n",
      "Captured...frame493.jpg\n",
      "Captured...frame494.jpg\n",
      "Captured...frame495.jpg\n",
      "Captured...frame496.jpg\n",
      "Captured...frame497.jpg\n",
      "Captured...frame498.jpg\n",
      "Captured...frame499.jpg\n",
      "Captured...frame500.jpg\n",
      "Captured...frame501.jpg\n",
      "Captured...frame502.jpg\n",
      "Captured...frame503.jpg\n",
      "Captured...frame504.jpg\n",
      "Captured...frame505.jpg\n",
      "Captured...frame506.jpg\n",
      "Captured...frame507.jpg\n",
      "Captured...frame508.jpg\n",
      "Captured...frame509.jpg\n",
      "Captured...frame510.jpg\n",
      "Captured...frame511.jpg\n",
      "Captured...frame512.jpg\n",
      "Captured...frame513.jpg\n",
      "Captured...frame514.jpg\n",
      "Captured...frame515.jpg\n",
      "Captured...frame516.jpg\n",
      "Captured...frame517.jpg\n",
      "Captured...frame518.jpg\n",
      "Captured...frame519.jpg\n",
      "Captured...frame520.jpg\n",
      "Captured...frame521.jpg\n",
      "Captured...frame522.jpg\n",
      "Captured...frame523.jpg\n",
      "Captured...frame524.jpg\n",
      "Captured...frame525.jpg\n",
      "Captured...frame526.jpg\n",
      "Captured...frame527.jpg\n",
      "Captured...frame528.jpg\n",
      "Captured...frame529.jpg\n",
      "Captured...frame530.jpg\n",
      "Captured...frame531.jpg\n",
      "Captured...frame532.jpg\n",
      "Captured...frame533.jpg\n",
      "Captured...frame534.jpg\n",
      "Captured...frame535.jpg\n",
      "Captured...frame536.jpg\n",
      "Captured...frame537.jpg\n",
      "Captured...frame538.jpg\n",
      "Captured...frame539.jpg\n",
      "Captured...frame540.jpg\n",
      "Captured...frame541.jpg\n",
      "Captured...frame542.jpg\n",
      "Captured...frame543.jpg\n",
      "Captured...frame544.jpg\n",
      "Captured...frame545.jpg\n",
      "Captured...frame546.jpg\n",
      "Captured...frame547.jpg\n",
      "Captured...frame548.jpg\n",
      "Captured...frame549.jpg\n",
      "Captured...frame550.jpg\n",
      "Captured...frame551.jpg\n",
      "Captured...frame552.jpg\n",
      "Captured...frame553.jpg\n",
      "Captured...frame554.jpg\n",
      "Captured...frame555.jpg\n",
      "Captured...frame556.jpg\n",
      "Captured...frame557.jpg\n",
      "Captured...frame558.jpg\n",
      "Captured...frame559.jpg\n",
      "Captured...frame560.jpg\n",
      "Captured...frame561.jpg\n",
      "Captured...frame562.jpg\n",
      "Captured...frame563.jpg\n",
      "Captured...frame564.jpg\n",
      "Captured...frame565.jpg\n",
      "Captured...frame566.jpg\n",
      "Captured...frame567.jpg\n",
      "Captured...frame568.jpg\n",
      "Captured...frame569.jpg\n",
      "Captured...frame570.jpg\n",
      "Captured...frame571.jpg\n",
      "Captured...frame572.jpg\n",
      "Captured...frame573.jpg\n",
      "Captured...frame574.jpg\n",
      "Captured...frame575.jpg\n",
      "Captured...frame576.jpg\n",
      "Captured...frame577.jpg\n",
      "Captured...frame578.jpg\n",
      "Captured...frame579.jpg\n",
      "Captured...frame580.jpg\n",
      "Captured...frame581.jpg\n",
      "Captured...frame582.jpg\n",
      "Captured...frame583.jpg\n",
      "Captured...frame584.jpg\n",
      "Captured...frame585.jpg\n",
      "Captured...frame586.jpg\n",
      "Captured...frame587.jpg\n",
      "Captured...frame588.jpg\n",
      "Captured...frame589.jpg\n",
      "Captured...frame590.jpg\n",
      "Captured...frame591.jpg\n",
      "Captured...frame592.jpg\n",
      "Captured...frame593.jpg\n",
      "Captured...frame594.jpg\n",
      "Captured...frame595.jpg\n",
      "Captured...frame596.jpg\n",
      "Captured...frame597.jpg\n",
      "Captured...frame598.jpg\n",
      "Captured...frame599.jpg\n",
      "Captured...frame600.jpg\n",
      "Captured...frame601.jpg\n",
      "Captured...frame602.jpg\n",
      "Captured...frame603.jpg\n",
      "Captured...frame604.jpg\n",
      "Captured...frame605.jpg\n",
      "Captured...frame606.jpg\n",
      "Captured...frame607.jpg\n",
      "Captured...frame608.jpg\n",
      "Captured...frame609.jpg\n",
      "Captured...frame610.jpg\n",
      "Captured...frame611.jpg\n",
      "Captured...frame612.jpg\n",
      "Captured...frame613.jpg\n",
      "Captured...frame614.jpg\n",
      "Captured...frame615.jpg\n",
      "Captured...frame616.jpg\n",
      "Captured...frame617.jpg\n",
      "Captured...frame618.jpg\n",
      "Captured...frame619.jpg\n",
      "Captured...frame620.jpg\n",
      "Captured...frame621.jpg\n",
      "Captured...frame622.jpg\n",
      "Captured...frame623.jpg\n",
      "Captured...frame624.jpg\n",
      "Captured...frame625.jpg\n",
      "Captured...frame626.jpg\n",
      "Captured...frame627.jpg\n",
      "Captured...frame628.jpg\n",
      "Captured...frame629.jpg\n",
      "Captured...frame630.jpg\n",
      "Captured...frame631.jpg\n",
      "Captured...frame632.jpg\n",
      "Captured...frame633.jpg\n",
      "Captured...frame634.jpg\n",
      "Captured...frame635.jpg\n",
      "Captured...frame636.jpg\n",
      "Captured...frame637.jpg\n",
      "Captured...frame638.jpg\n",
      "Captured...frame639.jpg\n",
      "Captured...frame640.jpg\n",
      "Captured...frame641.jpg\n",
      "Captured...frame642.jpg\n",
      "Captured...frame643.jpg\n",
      "Captured...frame644.jpg\n",
      "Captured...frame645.jpg\n",
      "Captured...frame646.jpg\n",
      "Captured...frame647.jpg\n",
      "Captured...frame648.jpg\n",
      "Captured...frame649.jpg\n",
      "Captured...frame650.jpg\n",
      "Captured...frame651.jpg\n",
      "Captured...frame652.jpg\n",
      "Captured...frame653.jpg\n",
      "Captured...frame654.jpg\n",
      "Captured...frame655.jpg\n",
      "Captured...frame656.jpg\n",
      "Captured...frame657.jpg\n",
      "Captured...frame658.jpg\n",
      "Captured...frame659.jpg\n",
      "Captured...frame660.jpg\n",
      "Captured...frame661.jpg\n",
      "Captured...frame662.jpg\n",
      "Captured...frame663.jpg\n",
      "Captured...frame664.jpg\n",
      "Captured...frame665.jpg\n",
      "Captured...frame666.jpg\n",
      "Captured...frame667.jpg\n",
      "Captured...frame668.jpg\n",
      "Captured...frame669.jpg\n",
      "Captured...frame670.jpg\n",
      "Captured...frame671.jpg\n",
      "Captured...frame672.jpg\n",
      "Captured...frame673.jpg\n",
      "Captured...frame674.jpg\n",
      "Captured...frame675.jpg\n",
      "Captured...frame676.jpg\n",
      "Captured...frame677.jpg\n",
      "Captured...frame678.jpg\n",
      "Captured...frame679.jpg\n",
      "Captured...frame680.jpg\n",
      "Captured...frame681.jpg\n",
      "Captured...frame682.jpg\n",
      "Captured...frame683.jpg\n",
      "Captured...frame684.jpg\n",
      "Captured...frame685.jpg\n",
      "Captured...frame686.jpg\n",
      "Captured...frame687.jpg\n",
      "Captured...frame688.jpg\n",
      "Captured...frame689.jpg\n",
      "Captured...frame690.jpg\n",
      "Captured...frame691.jpg\n",
      "Captured...frame692.jpg\n",
      "Captured...frame693.jpg\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Captured...frame694.jpg\n",
      "Captured...frame695.jpg\n",
      "Captured...frame696.jpg\n",
      "Captured...frame697.jpg\n",
      "Captured...frame698.jpg\n",
      "Captured...frame699.jpg\n",
      "Captured...frame700.jpg\n",
      "Captured...frame701.jpg\n",
      "Captured...frame702.jpg\n",
      "Captured...frame703.jpg\n",
      "Captured...frame704.jpg\n",
      "Captured...frame705.jpg\n",
      "Captured...frame706.jpg\n",
      "Captured...frame707.jpg\n",
      "Captured...frame708.jpg\n",
      "Captured...frame709.jpg\n",
      "Captured...frame710.jpg\n",
      "Captured...frame711.jpg\n",
      "Captured...frame712.jpg\n",
      "Captured...frame713.jpg\n",
      "Captured...frame714.jpg\n",
      "Captured...frame715.jpg\n",
      "Captured...frame716.jpg\n",
      "Captured...frame717.jpg\n",
      "Captured...frame718.jpg\n",
      "Captured...frame719.jpg\n",
      "Captured...frame720.jpg\n",
      "Captured...frame721.jpg\n",
      "Captured...frame722.jpg\n",
      "Captured...frame723.jpg\n",
      "Captured...frame724.jpg\n",
      "Captured...frame725.jpg\n",
      "Captured...frame726.jpg\n",
      "Captured...frame727.jpg\n",
      "Captured...frame728.jpg\n",
      "Captured...frame729.jpg\n",
      "Captured...frame730.jpg\n",
      "Captured...frame731.jpg\n",
      "Captured...frame732.jpg\n",
      "Captured...frame733.jpg\n",
      "Captured...frame734.jpg\n",
      "Captured...frame735.jpg\n",
      "Captured...frame736.jpg\n",
      "Captured...frame737.jpg\n",
      "Captured...frame738.jpg\n",
      "Captured...frame739.jpg\n",
      "Captured...frame740.jpg\n",
      "Captured...frame741.jpg\n",
      "Captured...frame742.jpg\n",
      "Captured...frame743.jpg\n",
      "Captured...frame744.jpg\n",
      "Captured...frame745.jpg\n",
      "Captured...frame746.jpg\n",
      "Captured...frame747.jpg\n",
      "Captured...frame748.jpg\n",
      "Captured...frame749.jpg\n",
      "Captured...frame750.jpg\n",
      "Captured...frame751.jpg\n",
      "Captured...frame752.jpg\n",
      "Captured...frame753.jpg\n",
      "Captured...frame754.jpg\n",
      "Captured...frame755.jpg\n",
      "Captured...frame756.jpg\n",
      "Captured...frame757.jpg\n",
      "Captured...frame758.jpg\n",
      "Captured...frame759.jpg\n",
      "Captured...frame760.jpg\n",
      "Captured...frame761.jpg\n",
      "Captured...frame762.jpg\n",
      "Captured...frame763.jpg\n",
      "Captured...frame764.jpg\n",
      "Captured...frame765.jpg\n",
      "Captured...frame766.jpg\n",
      "Captured...frame767.jpg\n",
      "Captured...frame768.jpg\n",
      "Captured...frame769.jpg\n",
      "Captured...frame770.jpg\n",
      "Captured...frame771.jpg\n",
      "Captured...frame772.jpg\n",
      "Captured...frame773.jpg\n",
      "Captured...frame774.jpg\n",
      "Captured...frame775.jpg\n",
      "Captured...frame776.jpg\n",
      "Captured...frame777.jpg\n",
      "Captured...frame778.jpg\n",
      "Captured...frame779.jpg\n",
      "Captured...frame780.jpg\n",
      "Captured...frame781.jpg\n",
      "Captured...frame782.jpg\n",
      "Captured...frame783.jpg\n",
      "Captured...frame784.jpg\n",
      "Captured...frame785.jpg\n",
      "Captured...frame786.jpg\n",
      "Captured...frame787.jpg\n",
      "Captured...frame788.jpg\n",
      "Captured...frame789.jpg\n",
      "Captured...frame790.jpg\n",
      "Captured...frame791.jpg\n",
      "Captured...frame792.jpg\n",
      "Captured...frame793.jpg\n",
      "Captured...frame794.jpg\n",
      "Captured...frame795.jpg\n",
      "Captured...frame796.jpg\n",
      "Captured...frame797.jpg\n",
      "Captured...frame798.jpg\n",
      "Captured...frame799.jpg\n",
      "Captured...frame800.jpg\n",
      "Captured...frame801.jpg\n",
      "Captured...frame802.jpg\n",
      "Captured...frame803.jpg\n",
      "Captured...frame804.jpg\n",
      "Captured...frame805.jpg\n",
      "Captured...frame806.jpg\n",
      "Captured...frame807.jpg\n",
      "Captured...frame808.jpg\n",
      "Captured...frame809.jpg\n",
      "Captured...frame810.jpg\n",
      "Captured...frame811.jpg\n",
      "Captured...frame812.jpg\n",
      "Captured...frame813.jpg\n",
      "Captured...frame814.jpg\n",
      "Captured...frame815.jpg\n",
      "Captured...frame816.jpg\n",
      "Captured...frame817.jpg\n",
      "Captured...frame818.jpg\n",
      "Captured...frame819.jpg\n",
      "Captured...frame820.jpg\n",
      "Captured...frame821.jpg\n",
      "Captured...frame822.jpg\n",
      "Captured...frame823.jpg\n",
      "Captured...frame824.jpg\n",
      "Captured...frame825.jpg\n",
      "Captured...frame826.jpg\n",
      "Captured...frame827.jpg\n",
      "Captured...frame828.jpg\n",
      "Captured...frame829.jpg\n",
      "Captured...frame830.jpg\n",
      "Captured...frame831.jpg\n",
      "Captured...frame832.jpg\n",
      "Captured...frame833.jpg\n",
      "Captured...frame834.jpg\n",
      "Captured...frame835.jpg\n",
      "Captured...frame836.jpg\n",
      "Captured...frame837.jpg\n",
      "Captured...frame838.jpg\n",
      "Captured...frame839.jpg\n",
      "Captured...frame840.jpg\n",
      "Captured...frame841.jpg\n",
      "Captured...frame842.jpg\n",
      "Captured...frame843.jpg\n",
      "Captured...frame844.jpg\n",
      "Captured...frame845.jpg\n",
      "Captured...frame846.jpg\n",
      "Captured...frame847.jpg\n",
      "Captured...frame848.jpg\n",
      "Captured...frame849.jpg\n",
      "Captured...frame850.jpg\n",
      "Captured...frame851.jpg\n",
      "Captured...frame852.jpg\n",
      "Captured...frame853.jpg\n",
      "Captured...frame854.jpg\n",
      "Captured...frame855.jpg\n",
      "Captured...frame856.jpg\n",
      "Captured...frame857.jpg\n",
      "Captured...frame858.jpg\n",
      "Captured...frame859.jpg\n",
      "Captured...frame860.jpg\n",
      "Captured...frame861.jpg\n",
      "Captured...frame862.jpg\n",
      "Captured...frame863.jpg\n",
      "Captured...frame864.jpg\n"
     ]
    }
   ],
   "source": [
    "# Create a VideoCapture object and read from input file\n",
    "# If the input is the camera, pass 0 instead of the video file name\n",
    "cap = cv2.VideoCapture('C:/Users/Wayne/Desktop/dog.mp4')\n",
    "\n",
    "# Check if camera opened successfully\n",
    "if (cap.isOpened()== False): \n",
    "  print(\"Error opening video stream or file\")\n",
    "\n",
    "currentframe = 0\n",
    "# Read until video is completed\n",
    "while(cap.isOpened()):\n",
    "  # Capture frame-by-frame\n",
    "  ret, frame = cap.read()\n",
    "  if ret == True:\n",
    "    \n",
    "    name = 'frame' + str(currentframe) + '.jpg'\n",
    "    print ('Captured...' + name) \n",
    "    cv2.imwrite(name, frame) \n",
    "    currentframe += 1\n",
    "    # Display the resulting frame\n",
    "    cv2.imshow('Frame',frame)\n",
    "\n",
    "    # Press Q on keyboard to  exit\n",
    "    if cv2.waitKey(25) & 0xFF == ord('q'):\n",
    "      break\n",
    "\n",
    "  # Break the loop\n",
    "  else: \n",
    "    break\n",
    "\n",
    "# When everything done, release the video capture object\n",
    "cap.release()\n",
    "\n",
    "# Closes all the frames\n",
    "cv2.destroyAllWindows()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.image.AxesImage at 0x17b6ee01a00>"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "img = plt.imread('frame20.jpg')   # reading image using its name\n",
    "plt.imshow(img)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "import os"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "09-19-Memorandum-of-Understanding-Temporary-Employment.pdf\n",
      "1-s2.0-S1877050920307924-main.pdf\n",
      "197-1595816731.pdf\n",
      "7-Steps-Practical-Guide_FACT-SHEET-rev2.pdf\n",
      "76876.pdf\n",
      "ap702e.pdf\n",
      "Certified FN922245.pdf\n",
      "Cholsas\n",
      "Cholsas (pvt) Ltd.pptx\n",
      "cholsas_ecommerc\n",
      "cholsas_ecommerce\n",
      "company\n",
      "desktop.ini\n",
      "dog.mp4\n",
      "employment-contract-revised.pdf\n",
      "index (1).pdf\n",
      "index (2).pdf\n",
      "index.html\n",
      "index.pdf\n",
      "literature review.docx\n",
      "LITERATURE REVIEW.pdf\n",
      "LV_R178495N.docx\n",
      "LV_R178495N.pdf\n",
      "MaizeLeaf.pdf\n",
      "MINUTES.docx\n",
      "POR - Dr.pdf\n",
      "ProveIT\n",
      "psiphon3.exe\n",
      "psiphon3.exe.orig\n",
      "R178495N.pdf\n",
      "R178512E.pdf\n",
      "SampleEmploymentContract.pdf\n",
      "school work\n",
      "TOC-20210623T142321Z-001.zip\n",
      "train.csv\n",
      "Web Applications\n",
      "~$Cholsas (pvt) Ltd.pptx\n",
      "~$latest.docx\n",
      "~$oposal latest.docx\n",
      "~$terature review.docx\n",
      "~WRL3909.tmp\n"
     ]
    }
   ],
   "source": [
    "for f in os.listdir(\"C:/Users/Wayne/Desktop/\"):\n",
    "\tprint(f)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Name</th>\n",
       "      <th>Class</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>frame0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>frame1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>frame2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>frame3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>frame4</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     Name  Class\n",
       "0  frame0      1\n",
       "1  frame1      1\n",
       "2  frame2      1\n",
       "3  frame3      1\n",
       "4  frame4      1"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#1=sit\n",
    "#2=catch\n",
    "#3=stare\n",
    "#4=no dog\n",
    "#5=walking\n",
    "#6=ball\n",
    "data = pd.read_csv('C:/Users/Wayne/Desktop/train.csv')     # reading the csv file\n",
    "data.head()      # printing first five rows of the file"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "# read the images using Name column\n",
    "X = [ ]     # creating an empty array\n",
    "for img_name in data.Name:\n",
    "    img = plt.imread('' + img_name + '.jpg')\n",
    "    X.append(img)  # storing each image in array X\n",
    "X = np.array(X)    # converting list to array"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "#train model Training images, and Their corresponding class\n",
    "y = data.Class\n",
    "dummy_y = np_utils.to_categorical(y)    # one hot encoding Classes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "#reshape images to same size for vgg16 penetration\n",
    "image = []\n",
    "for i in range(0,X.shape[0]):\n",
    "    a = resize(X[i], preserve_range=True, output_shape=(224,224)).astype(int)      # reshaping to 224*224*3\n",
    "    image.append(a)\n",
    "X = np.array(image)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "import tensorflow as tf"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[[[15.060997 , 19.221    , 25.32     ],\n",
       "         [15.060997 , 19.221    , 25.32     ],\n",
       "         [15.060997 , 19.221    , 25.32     ],\n",
       "         ...,\n",
       "         [50.060997 , 45.221    , 38.32     ],\n",
       "         [54.060997 , 49.221    , 42.32     ],\n",
       "         [52.060997 , 47.221    , 40.32     ]],\n",
       "\n",
       "        [[15.060997 , 19.221    , 25.32     ],\n",
       "         [15.060997 , 19.221    , 25.32     ],\n",
       "         [15.060997 , 19.221    , 25.32     ],\n",
       "         ...,\n",
       "         [46.060997 , 41.221    , 34.32     ],\n",
       "         [34.060997 , 29.221    , 22.32     ],\n",
       "         [36.060997 , 31.221    , 24.32     ]],\n",
       "\n",
       "        [[15.060997 , 19.221    , 25.32     ],\n",
       "         [15.060997 , 19.221    , 25.32     ],\n",
       "         [15.060997 , 19.221    , 25.32     ],\n",
       "         ...,\n",
       "         [42.060997 , 37.221    , 30.32     ],\n",
       "         [39.060997 , 34.221    , 27.32     ],\n",
       "         [47.060997 , 42.221    , 35.32     ]],\n",
       "\n",
       "        ...,\n",
       "\n",
       "        [[ 7.060997 ,  4.2210007,  4.3199997],\n",
       "         [ 7.060997 ,  4.2210007,  4.3199997],\n",
       "         [ 7.060997 ,  4.2210007,  4.3199997],\n",
       "         ...,\n",
       "         [ 2.060997 ,  1.2210007, -1.6800003],\n",
       "         [ 2.060997 ,  1.2210007, -1.6800003],\n",
       "         [ 3.060997 ,  2.2210007, -0.6800003]],\n",
       "\n",
       "        [[ 7.060997 ,  4.2210007,  4.3199997],\n",
       "         [ 7.060997 ,  4.2210007,  4.3199997],\n",
       "         [ 7.060997 ,  4.2210007,  4.3199997],\n",
       "         ...,\n",
       "         [ 4.060997 ,  3.2210007,  0.3199997],\n",
       "         [ 4.060997 ,  3.2210007,  0.3199997],\n",
       "         [ 4.060997 ,  3.2210007,  0.3199997]],\n",
       "\n",
       "        [[ 7.060997 ,  4.2210007,  4.3199997],\n",
       "         [ 7.060997 ,  4.2210007,  4.3199997],\n",
       "         [ 7.060997 ,  4.2210007,  4.3199997],\n",
       "         ...,\n",
       "         [ 4.060997 ,  3.2210007,  0.3199997],\n",
       "         [ 4.060997 ,  3.2210007,  0.3199997],\n",
       "         [ 4.060997 ,  3.2210007,  0.3199997]]],\n",
       "\n",
       "\n",
       "       [[[15.060997 , 19.221    , 25.32     ],\n",
       "         [15.060997 , 19.221    , 25.32     ],\n",
       "         [15.060997 , 19.221    , 25.32     ],\n",
       "         ...,\n",
       "         [50.060997 , 45.221    , 38.32     ],\n",
       "         [54.060997 , 49.221    , 42.32     ],\n",
       "         [52.060997 , 47.221    , 40.32     ]],\n",
       "\n",
       "        [[15.060997 , 19.221    , 25.32     ],\n",
       "         [15.060997 , 19.221    , 25.32     ],\n",
       "         [15.060997 , 19.221    , 25.32     ],\n",
       "         ...,\n",
       "         [46.060997 , 41.221    , 34.32     ],\n",
       "         [34.060997 , 29.221    , 22.32     ],\n",
       "         [36.060997 , 31.221    , 24.32     ]],\n",
       "\n",
       "        [[15.060997 , 19.221    , 25.32     ],\n",
       "         [15.060997 , 19.221    , 25.32     ],\n",
       "         [15.060997 , 19.221    , 25.32     ],\n",
       "         ...,\n",
       "         [42.060997 , 37.221    , 30.32     ],\n",
       "         [39.060997 , 34.221    , 27.32     ],\n",
       "         [47.060997 , 42.221    , 35.32     ]],\n",
       "\n",
       "        ...,\n",
       "\n",
       "        [[ 7.060997 ,  4.2210007,  4.3199997],\n",
       "         [ 7.060997 ,  4.2210007,  4.3199997],\n",
       "         [ 7.060997 ,  4.2210007,  4.3199997],\n",
       "         ...,\n",
       "         [ 2.060997 ,  1.2210007, -1.6800003],\n",
       "         [ 2.060997 ,  1.2210007, -1.6800003],\n",
       "         [ 3.060997 ,  2.2210007, -0.6800003]],\n",
       "\n",
       "        [[ 7.060997 ,  4.2210007,  4.3199997],\n",
       "         [ 7.060997 ,  4.2210007,  4.3199997],\n",
       "         [ 7.060997 ,  4.2210007,  4.3199997],\n",
       "         ...,\n",
       "         [ 4.060997 ,  3.2210007,  0.3199997],\n",
       "         [ 4.060997 ,  3.2210007,  0.3199997],\n",
       "         [ 4.060997 ,  3.2210007,  0.3199997]],\n",
       "\n",
       "        [[ 7.060997 ,  4.2210007,  4.3199997],\n",
       "         [ 7.060997 ,  4.2210007,  4.3199997],\n",
       "         [ 7.060997 ,  4.2210007,  4.3199997],\n",
       "         ...,\n",
       "         [ 4.060997 ,  3.2210007,  0.3199997],\n",
       "         [ 4.060997 ,  3.2210007,  0.3199997],\n",
       "         [ 4.060997 ,  3.2210007,  0.3199997]]],\n",
       "\n",
       "\n",
       "       [[[15.060997 , 19.221    , 25.32     ],\n",
       "         [15.060997 , 19.221    , 25.32     ],\n",
       "         [15.060997 , 19.221    , 25.32     ],\n",
       "         ...,\n",
       "         [50.060997 , 45.221    , 38.32     ],\n",
       "         [54.060997 , 49.221    , 42.32     ],\n",
       "         [52.060997 , 47.221    , 40.32     ]],\n",
       "\n",
       "        [[15.060997 , 19.221    , 25.32     ],\n",
       "         [15.060997 , 19.221    , 25.32     ],\n",
       "         [15.060997 , 19.221    , 25.32     ],\n",
       "         ...,\n",
       "         [46.060997 , 41.221    , 34.32     ],\n",
       "         [34.060997 , 29.221    , 22.32     ],\n",
       "         [36.060997 , 31.221    , 24.32     ]],\n",
       "\n",
       "        [[15.060997 , 19.221    , 25.32     ],\n",
       "         [15.060997 , 19.221    , 25.32     ],\n",
       "         [15.060997 , 19.221    , 25.32     ],\n",
       "         ...,\n",
       "         [42.060997 , 37.221    , 30.32     ],\n",
       "         [39.060997 , 34.221    , 27.32     ],\n",
       "         [47.060997 , 42.221    , 35.32     ]],\n",
       "\n",
       "        ...,\n",
       "\n",
       "        [[ 7.060997 ,  4.2210007,  4.3199997],\n",
       "         [ 7.060997 ,  4.2210007,  4.3199997],\n",
       "         [ 7.060997 ,  4.2210007,  4.3199997],\n",
       "         ...,\n",
       "         [ 2.060997 ,  1.2210007, -1.6800003],\n",
       "         [ 2.060997 ,  1.2210007, -1.6800003],\n",
       "         [ 3.060997 ,  2.2210007, -0.6800003]],\n",
       "\n",
       "        [[ 7.060997 ,  4.2210007,  4.3199997],\n",
       "         [ 7.060997 ,  4.2210007,  4.3199997],\n",
       "         [ 7.060997 ,  4.2210007,  4.3199997],\n",
       "         ...,\n",
       "         [ 4.060997 ,  3.2210007,  0.3199997],\n",
       "         [ 4.060997 ,  3.2210007,  0.3199997],\n",
       "         [ 4.060997 ,  3.2210007,  0.3199997]],\n",
       "\n",
       "        [[ 7.060997 ,  4.2210007,  4.3199997],\n",
       "         [ 7.060997 ,  4.2210007,  4.3199997],\n",
       "         [ 7.060997 ,  4.2210007,  4.3199997],\n",
       "         ...,\n",
       "         [ 4.060997 ,  3.2210007,  0.3199997],\n",
       "         [ 4.060997 ,  3.2210007,  0.3199997],\n",
       "         [ 4.060997 ,  3.2210007,  0.3199997]]],\n",
       "\n",
       "\n",
       "       ...,\n",
       "\n",
       "\n",
       "       [[[ 7.060997 , 10.221001 , 15.32     ],\n",
       "         [ 7.060997 , 10.221001 , 15.32     ],\n",
       "         [ 7.060997 , 10.221001 , 15.32     ],\n",
       "         ...,\n",
       "         [56.060997 , 51.221    , 43.32     ],\n",
       "         [54.060997 , 49.221    , 41.32     ],\n",
       "         [54.060997 , 49.221    , 41.32     ]],\n",
       "\n",
       "        [[ 7.060997 , 10.221001 , 15.32     ],\n",
       "         [ 7.060997 , 10.221001 , 15.32     ],\n",
       "         [ 7.060997 , 10.221001 , 15.32     ],\n",
       "         ...,\n",
       "         [57.060997 , 52.221    , 44.32     ],\n",
       "         [45.060997 , 40.221    , 32.32     ],\n",
       "         [40.060997 , 35.221    , 27.32     ]],\n",
       "\n",
       "        [[ 7.060997 , 10.221001 , 15.32     ],\n",
       "         [ 7.060997 , 10.221001 , 15.32     ],\n",
       "         [ 7.060997 , 10.221001 , 15.32     ],\n",
       "         ...,\n",
       "         [42.060997 , 37.221    , 29.32     ],\n",
       "         [46.060997 , 41.221    , 33.32     ],\n",
       "         [56.060997 , 51.221    , 43.32     ]],\n",
       "\n",
       "        ...,\n",
       "\n",
       "        [[12.060997 , 11.221001 ,  4.3199997],\n",
       "         [13.060997 , 12.221001 ,  5.3199997],\n",
       "         [11.060997 , 11.221001 ,  2.3199997],\n",
       "         ...,\n",
       "         [15.060997 , 12.221001 ,  5.3199997],\n",
       "         [13.060997 , 10.221001 ,  3.3199997],\n",
       "         [10.060997 ,  7.2210007,  0.3199997]],\n",
       "\n",
       "        [[12.060997 , 11.221001 ,  4.3199997],\n",
       "         [13.060997 , 12.221001 ,  5.3199997],\n",
       "         [13.060997 , 13.221001 ,  4.3199997],\n",
       "         ...,\n",
       "         [14.060997 , 11.221001 ,  4.3199997],\n",
       "         [13.060997 , 10.221001 ,  3.3199997],\n",
       "         [12.060997 ,  9.221001 ,  2.3199997]],\n",
       "\n",
       "        [[12.060997 , 11.221001 ,  4.3199997],\n",
       "         [13.060997 , 12.221001 ,  5.3199997],\n",
       "         [15.060997 , 14.221001 ,  6.3199997],\n",
       "         ...,\n",
       "         [13.060997 , 10.221001 ,  3.3199997],\n",
       "         [14.060997 , 11.221001 ,  4.3199997],\n",
       "         [16.060997 , 13.221001 ,  6.3199997]]],\n",
       "\n",
       "\n",
       "       [[[ 7.060997 , 10.221001 , 15.32     ],\n",
       "         [ 7.060997 , 10.221001 , 15.32     ],\n",
       "         [ 7.060997 , 10.221001 , 15.32     ],\n",
       "         ...,\n",
       "         [56.060997 , 51.221    , 43.32     ],\n",
       "         [54.060997 , 49.221    , 41.32     ],\n",
       "         [54.060997 , 49.221    , 41.32     ]],\n",
       "\n",
       "        [[ 7.060997 , 10.221001 , 15.32     ],\n",
       "         [ 7.060997 , 10.221001 , 15.32     ],\n",
       "         [ 7.060997 , 10.221001 , 15.32     ],\n",
       "         ...,\n",
       "         [57.060997 , 52.221    , 44.32     ],\n",
       "         [45.060997 , 40.221    , 32.32     ],\n",
       "         [40.060997 , 35.221    , 27.32     ]],\n",
       "\n",
       "        [[ 7.060997 , 10.221001 , 15.32     ],\n",
       "         [ 7.060997 , 10.221001 , 15.32     ],\n",
       "         [ 7.060997 , 10.221001 , 15.32     ],\n",
       "         ...,\n",
       "         [42.060997 , 37.221    , 29.32     ],\n",
       "         [46.060997 , 41.221    , 33.32     ],\n",
       "         [56.060997 , 51.221    , 43.32     ]],\n",
       "\n",
       "        ...,\n",
       "\n",
       "        [[12.060997 , 11.221001 ,  4.3199997],\n",
       "         [13.060997 , 12.221001 ,  5.3199997],\n",
       "         [11.060997 , 11.221001 ,  2.3199997],\n",
       "         ...,\n",
       "         [15.060997 , 12.221001 ,  5.3199997],\n",
       "         [13.060997 , 10.221001 ,  3.3199997],\n",
       "         [10.060997 ,  7.2210007,  0.3199997]],\n",
       "\n",
       "        [[12.060997 , 11.221001 ,  4.3199997],\n",
       "         [13.060997 , 12.221001 ,  5.3199997],\n",
       "         [13.060997 , 13.221001 ,  4.3199997],\n",
       "         ...,\n",
       "         [14.060997 , 11.221001 ,  4.3199997],\n",
       "         [13.060997 , 10.221001 ,  3.3199997],\n",
       "         [12.060997 ,  9.221001 ,  2.3199997]],\n",
       "\n",
       "        [[12.060997 , 11.221001 ,  4.3199997],\n",
       "         [13.060997 , 12.221001 ,  5.3199997],\n",
       "         [15.060997 , 14.221001 ,  6.3199997],\n",
       "         ...,\n",
       "         [13.060997 , 10.221001 ,  3.3199997],\n",
       "         [14.060997 , 11.221001 ,  4.3199997],\n",
       "         [16.060997 , 13.221001 ,  6.3199997]]],\n",
       "\n",
       "\n",
       "       [[[ 7.060997 , 10.221001 , 15.32     ],\n",
       "         [ 7.060997 , 10.221001 , 15.32     ],\n",
       "         [ 7.060997 , 10.221001 , 15.32     ],\n",
       "         ...,\n",
       "         [56.060997 , 51.221    , 43.32     ],\n",
       "         [54.060997 , 49.221    , 41.32     ],\n",
       "         [54.060997 , 49.221    , 41.32     ]],\n",
       "\n",
       "        [[ 7.060997 , 10.221001 , 15.32     ],\n",
       "         [ 7.060997 , 10.221001 , 15.32     ],\n",
       "         [ 7.060997 , 10.221001 , 15.32     ],\n",
       "         ...,\n",
       "         [57.060997 , 52.221    , 44.32     ],\n",
       "         [45.060997 , 40.221    , 32.32     ],\n",
       "         [40.060997 , 35.221    , 27.32     ]],\n",
       "\n",
       "        [[ 7.060997 , 10.221001 , 15.32     ],\n",
       "         [ 7.060997 , 10.221001 , 15.32     ],\n",
       "         [ 7.060997 , 10.221001 , 15.32     ],\n",
       "         ...,\n",
       "         [42.060997 , 37.221    , 29.32     ],\n",
       "         [46.060997 , 41.221    , 33.32     ],\n",
       "         [56.060997 , 51.221    , 43.32     ]],\n",
       "\n",
       "        ...,\n",
       "\n",
       "        [[12.060997 , 11.221001 ,  4.3199997],\n",
       "         [13.060997 , 12.221001 ,  5.3199997],\n",
       "         [11.060997 , 11.221001 ,  2.3199997],\n",
       "         ...,\n",
       "         [15.060997 , 12.221001 ,  5.3199997],\n",
       "         [13.060997 , 10.221001 ,  3.3199997],\n",
       "         [10.060997 ,  7.2210007,  0.3199997]],\n",
       "\n",
       "        [[12.060997 , 11.221001 ,  4.3199997],\n",
       "         [13.060997 , 12.221001 ,  5.3199997],\n",
       "         [13.060997 , 13.221001 ,  4.3199997],\n",
       "         ...,\n",
       "         [14.060997 , 11.221001 ,  4.3199997],\n",
       "         [13.060997 , 10.221001 ,  3.3199997],\n",
       "         [12.060997 ,  9.221001 ,  2.3199997]],\n",
       "\n",
       "        [[12.060997 , 11.221001 ,  4.3199997],\n",
       "         [13.060997 , 12.221001 ,  5.3199997],\n",
       "         [15.060997 , 14.221001 ,  6.3199997],\n",
       "         ...,\n",
       "         [13.060997 , 10.221001 ,  3.3199997],\n",
       "         [14.060997 , 11.221001 ,  4.3199997],\n",
       "         [16.060997 , 13.221001 ,  6.3199997]]]], dtype=float32)"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#image preprocessing\n",
    "from keras.applications.vgg16 import preprocess_input\n",
    "tf.keras.applications.resnet.preprocess_input(\n",
    "    X, data_format=None\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [],
   "source": [
    "#validation set to check the performance of the model on unseen images\n",
    "from sklearn.model_selection import train_test_split\n",
    "X_train, X_valid, y_train, y_valid = train_test_split(X, dummy_y, test_size=0.3, random_state=42)    # preparing the validation set"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [],
   "source": [
    "#VGG16 pretrained model \n",
    "from keras.models import Sequential\n",
    "from keras.applications.vgg16 import VGG16\n",
    "from keras.layers import Dense, InputLayer, Dropout"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [],
   "source": [
    "# load the VGG16 pretrained model and store it as base_model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Downloading data from https://storage.googleapis.com/tensorflow/keras-applications/vgg16/vgg16_weights_tf_dim_ordering_tf_kernels_notop.h5\n",
      "58892288/58889256 [==============================] - 63s 1us/step\n"
     ]
    }
   ],
   "source": [
    "base_model = VGG16(weights='imagenet', include_top=False, input_shape=(224, 224, 3))    # include_top=False to remove the top layer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [],
   "source": [
    "#make predictions using this model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "((89, 7, 7, 512), (39, 7, 7, 512))"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_train = base_model.predict(X_train)\n",
    "X_valid = base_model.predict(X_valid)\n",
    "X_train.shape, X_valid.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [],
   "source": [
    "#In order to pass it to our neural network, we have to reshape it to 1-D.\n",
    "X_train = X_train.reshape(89, 7*7*512)      # converting to 1-D\n",
    "X_valid = X_valid.reshape(39, 7*7*512)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [],
   "source": [
    "#preprocess the images and make them zero-centered which helps the model to converge faster.\n",
    "train = X_train/X_train.max()      # centering the data\n",
    "X_valid = X_valid/X_train.max()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Building, Compiling and Training the model\n",
    "# i. Building the model\n",
    "model = Sequential()\n",
    "model.add(InputLayer((7*7*512,)))    # input layer\n",
    "model.add(Dense(units=1024, activation='sigmoid')) # hidden layer\n",
    "model.add(Dense(3, activation='softmax'))    # output layer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"sequential\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense (Dense)                (None, 1024)              25691136  \n",
      "_________________________________________________________________\n",
      "dense_1 (Dense)              (None, 3)                 3075      \n",
      "=================================================================\n",
      "Total params: 25,694,211\n",
      "Trainable params: 25,694,211\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "model.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [],
   "source": [
    "#compile our model\n",
    "model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'model' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-2-6cd918b7e280>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[1;31m#Training the model\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m----> 2\u001b[1;33m \u001b[0mmodel\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mtrain\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0my_train\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mvalidation_data\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mX_valid\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0my_valid\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m: name 'model' is not defined"
     ]
    }
   ],
   "source": [
    "#Training the model\n",
    "model.fit(train, y_train, epochs=100, validation_data=(X_valid, y_valid))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
